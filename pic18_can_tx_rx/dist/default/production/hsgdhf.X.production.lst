

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 20 14:04:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4585 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _RXB0IF	set	32032
    60  0000                     _RXB0IP	set	32040
    61  0000                     _PEIE	set	32662
    62  0000                     _RXF0SIDH	set	3840
    63  0000                     _TXB0CON	set	3904
    64  0000                     _TXB0SIDH	set	3905
    65  0000                     _CANCON	set	3951
    66  0000                     _TRISBbits	set	3987
    67  0000                     _RXB0IE	set	32024
    68  0000                     _GIE	set	32663
    69  0000                     _TRISCbits	set	3988
    70  0000                     _PORTBbits	set	3969
    71  0000                     _BRGCON3	set	3954
    72  0000                     _BRGCON2	set	3953
    73  0000                     _BRGCON1	set	3952
    74  0000                     _TXB0DLC	set	3909
    75  0000                     _TXB0SIDL	set	3906
    76  0000                     _RXB0CONbits	set	3936
    77  0000                     _RXB0SIDH	set	3937
    78  0000                     _TXB0D7	set	3917
    79  0000                     _TXB0D6	set	3916
    80  0000                     _TXB0D5	set	3915
    81  0000                     _TXB0D4	set	3914
    82  0000                     _TXB0D3	set	3913
    83  0000                     _TXB0D2	set	3912
    84  0000                     _TXB0D1	set	3911
    85  0000                     _TXB0D0	set	3910
    86  0000                     _RXB0DLC	set	3941
    87  0000                     _RXB0SIDL	set	3938
    88  0000                     _RXB0D7	set	3949
    89  0000                     _RXB0D6	set	3948
    90  0000                     _RXB0D5	set	3947
    91  0000                     _RXB0D4	set	3946
    92  0000                     _RXB0D3	set	3945
    93  0000                     _RXB0D2	set	3944
    94  0000                     _RXB0D1	set	3943
    95  0000                     _RXB0D0	set	3942
    96  0000                     _RXM0SIDH	set	3864
    97  0000                     _RXF0SIDL	set	3841
    98  0000                     _RXM0SIDL	set	3865
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  000246                     __pcinit:
   104                           	callstack 0
   105  000246                     start_initialization:
   106                           	callstack 0
   107  000246                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (24 bytes)
   111  000246  EE00  F001         	lfsr	0,__pbssCOMRAM
   112  00024A  0E18               	movlw	24
   113  00024C                     clear_0:
   114  00024C  6AEE               	clrf	postinc0,c
   115  00024E  06E8               	decf	wreg,f,c
   116  000250  E1FD               	bnz	clear_0
   117  000252                     end_of_initialization:
   118                           	callstack 0
   119  000252                     __end_of__initialization:
   120                           	callstack 0
   121  000252  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   122  000254  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   123  000256  0100               	movlb	0
   124  000258  EF09  F000         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127  000001                     __pbssCOMRAM:
   128                           	callstack 0
   129  000001                     _RX_data:
   130                           	callstack 0
   131  000001                     	ds	16
   132  000011                     _flag:
   133                           	callstack 0
   134  000011                     	ds	2
   135  000013                     _DLCR:
   136                           	callstack 0
   137  000013                     	ds	2
   138  000015                     _DLR:
   139                           	callstack 0
   140  000015                     	ds	2
   141  000017                     _DHR:
   142                           	callstack 0
   143  000017                     	ds	2
   144                           
   145                           	psect	cstackCOMRAM
   146  000019                     __pcstackCOMRAM:
   147                           	callstack 0
   148  000019                     set_mode@X:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x0
   152  000019                     	ds	2
   153  00001B                     tx_write@ID:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x2
   157  00001B                     	ds	2
   158  00001D                     ??_tx_write:
   159                           
   160                           ; 1 bytes @ 0x4
   161  00001D                     	ds	2
   162  00001F                     tx_write@DL:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x6
   166  00001F                     	ds	2
   167  000021                     tx_write@DH:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x8
   171  000021                     	ds	2
   172  000023                     ??_main:
   173                           
   174                           ; 1 bytes @ 0xA
   175  000023                     	ds	5
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 101 in file "mainappln.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   198 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   200 ;;Total ram usage:        5 bytes
   201 ;; Hardware stack levels required when called: 3
   202 ;; This function calls:
   203 ;;		_can_config_baud
   204 ;;		_can_init
   205 ;;		_mask_filter
   206 ;;		_rx_receive
   207 ;;		_sys_init
   208 ;;		_tx_write
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text0
   215  000012                     __ptext0:
   216                           	callstack 0
   217  000012                     _main:
   218                           	callstack 28
   219  000012                     
   220                           ;mainappln.c: 103:     TRISBbits.RB0=0;
   221  000012  9093               	bcf	147,0,c	;volatile
   222                           
   223                           ;mainappln.c: 104:     TRISCbits.RC0=1;
   224  000014  8094               	bsf	148,0,c	;volatile
   225  000016                     
   226                           ;mainappln.c: 105:     sys_init();
   227  000016  EC38  F001         	call	_sys_init	;wreg free
   228                           
   229                           ;mainappln.c: 106:     can_init();
   230  00001A  EC3D  F001         	call	_can_init	;wreg free
   231  00001E                     
   232                           ;mainappln.c: 107:     can_config_baud();
   233  00001E  EC00  F001         	call	_can_config_baud	;wreg free
   234  000022                     
   235                           ;mainappln.c: 108:     mask_filter();
   236  000022  EC2E  F001         	call	_mask_filter	;wreg free
   237  000026                     l1018:
   238                           
   239                           ;mainappln.c: 114:     {;mainappln.c: 115:     tx_write(0x100);
   240  000026  0E01               	movlw	1
   241  000028  6E1C               	movwf	(tx_write@ID+1)^0,c
   242  00002A  0E00               	movlw	0
   243  00002C  6E1B               	movwf	tx_write@ID^0,c
   244  00002E  EC6F  F000         	call	_tx_write	;wreg free
   245  000032                     
   246                           ;mainappln.c: 116:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   247  000032  0E1A               	movlw	26
   248  000034  6E24               	movwf	(??_main+1)^0,c
   249  000036  0E5E               	movlw	94
   250  000038  6E23               	movwf	??_main^0,c
   251  00003A  0E6E               	movlw	110
   252  00003C                     u167:
   253  00003C  2EE8               	decfsz	wreg,f,c
   254  00003E  D7FE               	bra	u167
   255  000040  2E23               	decfsz	??_main^0,f,c
   256  000042  D7FC               	bra	u167
   257  000044  2E24               	decfsz	(??_main+1)^0,f,c
   258  000046  D7FA               	bra	u167
   259  000048  D000               	nop2	
   260  00004A                     
   261                           ;mainappln.c: 117:     if(flag==1)
   262  00004A  0411               	decf	_flag^0,w,c
   263  00004C  1012               	iorwf	(_flag+1)^0,w,c
   264  00004E  A4D8               	btfss	status,2,c
   265  000050  EF2C  F000         	goto	u131
   266  000054  EF2E  F000         	goto	u130
   267  000058                     u131:
   268  000058  EF5F  F000         	goto	l1032
   269  00005C                     u130:
   270  00005C                     
   271                           ;mainappln.c: 118:     {;mainappln.c: 119:         flag=0;
   272  00005C  0E00               	movlw	0
   273  00005E  6E12               	movwf	(_flag+1)^0,c
   274  000060  0E00               	movlw	0
   275  000062  6E11               	movwf	_flag^0,c
   276  000064                     
   277                           ;mainappln.c: 120:     rx_receive();
   278  000064  ECD7  F000         	call	_rx_receive	;wreg free
   279  000068                     
   280                           ;mainappln.c: 122:     if((DHR << 3)| (DLR >>5))
   281  000068  C015  F023         	movff	_DLR,??_main
   282  00006C  C016  F024         	movff	_DLR+1,??_main+1
   283  000070  0E05               	movlw	5
   284  000072  6E25               	movwf	(??_main+2)^0,c
   285  000074                     u145:
   286  000074  90D8               	bcf	status,0,c
   287  000076  3224               	rrcf	(??_main+1)^0,f,c
   288  000078  3223               	rrcf	??_main^0,f,c
   289  00007A  2E25               	decfsz	(??_main+2)^0,f,c
   290  00007C  EF3A  F000         	goto	u145
   291  000080  C017  F026         	movff	_DHR,??_main+3
   292  000084  C018  F027         	movff	_DHR+1,??_main+4
   293  000088  90D8               	bcf	status,0,c
   294  00008A  3626               	rlcf	(??_main+3)^0,f,c
   295  00008C  3627               	rlcf	(??_main+4)^0,f,c
   296  00008E  90D8               	bcf	status,0,c
   297  000090  3626               	rlcf	(??_main+3)^0,f,c
   298  000092  3627               	rlcf	(??_main+4)^0,f,c
   299  000094  90D8               	bcf	status,0,c
   300  000096  3626               	rlcf	(??_main+3)^0,f,c
   301  000098  3627               	rlcf	(??_main+4)^0,f,c
   302  00009A  5023               	movf	??_main^0,w,c
   303  00009C  1226               	iorwf	(??_main+3)^0,f,c
   304  00009E  5024               	movf	(??_main+1)^0,w,c
   305  0000A0  1227               	iorwf	(??_main+4)^0,f,c
   306  0000A2  5026               	movf	(??_main+3)^0,w,c
   307  0000A4  1027               	iorwf	(??_main+4)^0,w,c
   308  0000A6  B4D8               	btfsc	status,2,c
   309  0000A8  EF58  F000         	goto	u151
   310  0000AC  EF5A  F000         	goto	u150
   311  0000B0                     u151:
   312  0000B0  EF5E  F000         	goto	l138
   313  0000B4                     u150:
   314  0000B4                     
   315                           ;mainappln.c: 123:     {;mainappln.c: 124:         PORTBbits.RB7=0;
   316  0000B4  9E81               	bcf	129,7,c	;volatile
   317                           
   318                           ;mainappln.c: 125:         PORTBbits.RB6=1;
   319  0000B6  8C81               	bsf	129,6,c	;volatile
   320                           
   321                           ;mainappln.c: 126:     }
   322  0000B8  EF5F  F000         	goto	l1032
   323  0000BC                     l138:
   324                           
   325                           ;mainappln.c: 128:    {;mainappln.c: 129:       PORTBbits.RB6=0;
   326  0000BC  9C81               	bcf	129,6,c	;volatile
   327  0000BE                     l1032:
   328                           
   329                           ;mainappln.c: 132:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   330  0000BE  0E1A               	movlw	26
   331  0000C0  6E24               	movwf	(??_main+1)^0,c
   332  0000C2  0E5E               	movlw	94
   333  0000C4  6E23               	movwf	??_main^0,c
   334  0000C6  0E6E               	movlw	110
   335  0000C8                     u177:
   336  0000C8  2EE8               	decfsz	wreg,f,c
   337  0000CA  D7FE               	bra	u177
   338  0000CC  2E23               	decfsz	??_main^0,f,c
   339  0000CE  D7FC               	bra	u177
   340  0000D0  2E24               	decfsz	(??_main+1)^0,f,c
   341  0000D2  D7FA               	bra	u177
   342  0000D4  D000               	nop2	
   343  0000D6  EF13  F000         	goto	l1018
   344  0000DA  EF07  F000         	goto	start
   345  0000DE                     __end_of_main:
   346                           	callstack 0
   347                           
   348 ;; *************** function _tx_write *****************
   349 ;; Defined at:
   350 ;;		line 13 in file "./TX_WRITE.h"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  ID              2    2[COMRAM] unsigned int 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  DH              2    8[COMRAM] unsigned int 
   355 ;;  DL              2    6[COMRAM] unsigned int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   369 ;;Total ram usage:        8 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; Hardware stack levels required when called: 2
   372 ;; This function calls:
   373 ;;		_set_mode
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text1
   380  0000DE                     __ptext1:
   381                           	callstack 0
   382  0000DE                     _tx_write:
   383                           	callstack 28
   384  0000DE                     
   385                           ;./TX_WRITE.h: 13: void tx_write(unsigned int ID);./TX_WRITE.h: 14: {;./TX_WRITE.h: 15: 
      +                              set_mode(2);
   386  0000DE  0E00               	movlw	0
   387  0000E0  6E1A               	movwf	(set_mode@X+1)^0,c
   388  0000E2  0E02               	movlw	2
   389  0000E4  6E19               	movwf	set_mode@X^0,c
   390  0000E6  ECAD  F000         	call	_set_mode	;wreg free
   391  0000EA                     
   392                           ;./TX_WRITE.h: 16:     unsigned int DL=((ID <<5) & 0xFF);
   393  0000EA  C01B  F01D         	movff	tx_write@ID,??_tx_write
   394  0000EE  C01C  F01E         	movff	tx_write@ID+1,??_tx_write+1
   395  0000F2  0E05               	movlw	5
   396  0000F4                     u125:
   397  0000F4  90D8               	bcf	status,0,c
   398  0000F6  361D               	rlcf	??_tx_write^0,f,c
   399  0000F8  361E               	rlcf	(??_tx_write+1)^0,f,c
   400  0000FA  2EE8               	decfsz	wreg,f,c
   401  0000FC  EF7A  F000         	goto	u125
   402  000100  501D               	movf	??_tx_write^0,w,c
   403  000102  6E1F               	movwf	tx_write@DL^0,c
   404  000104  6A20               	clrf	(tx_write@DL+1)^0,c
   405  000106                     
   406                           ;./TX_WRITE.h: 17:     unsigned int DH= ((ID >>3) & 0xFF);
   407  000106  C01B  F01D         	movff	tx_write@ID,??_tx_write
   408  00010A  C01C  F01E         	movff	tx_write@ID+1,??_tx_write+1
   409  00010E  90D8               	bcf	status,0,c
   410  000110  321E               	rrcf	(??_tx_write+1)^0,f,c
   411  000112  321D               	rrcf	??_tx_write^0,f,c
   412  000114  90D8               	bcf	status,0,c
   413  000116  321E               	rrcf	(??_tx_write+1)^0,f,c
   414  000118  321D               	rrcf	??_tx_write^0,f,c
   415  00011A  90D8               	bcf	status,0,c
   416  00011C  321E               	rrcf	(??_tx_write+1)^0,f,c
   417  00011E  321D               	rrcf	??_tx_write^0,f,c
   418  000120  501D               	movf	??_tx_write^0,w,c
   419  000122  6E21               	movwf	tx_write@DH^0,c
   420  000124  6A22               	clrf	(tx_write@DH+1)^0,c
   421  000126                     
   422                           ;./TX_WRITE.h: 18:     TXB0SIDH = DH;
   423  000126  C021  FF41         	movff	tx_write@DH,3905	;volatile
   424  00012A                     
   425                           ;./TX_WRITE.h: 19:     TXB0SIDL =DL;
   426  00012A  C01F  FF42         	movff	tx_write@DL,3906	;volatile
   427  00012E                     
   428                           ;./TX_WRITE.h: 21:      TXB0DLC = 0x08;
   429  00012E  0E08               	movlw	8
   430  000130  010F               	movlb	15	; () banked
   431  000132  6F45               	movwf	69,b	;volatile
   432  000134                     
   433                           ; BSR set to: 15
   434                           ;./TX_WRITE.h: 22:    TXB0D0 = 0x01;
   435  000134  0E01               	movlw	1
   436  000136  6F46               	movwf	70,b	;volatile
   437  000138                     
   438                           ; BSR set to: 15
   439                           ;./TX_WRITE.h: 23:    TXB0D1 = 0x02;
   440  000138  0E02               	movlw	2
   441  00013A  6F47               	movwf	71,b	;volatile
   442  00013C                     
   443                           ; BSR set to: 15
   444                           ;./TX_WRITE.h: 24:    TXB0D2 = 0x03;
   445  00013C  0E03               	movlw	3
   446  00013E  6F48               	movwf	72,b	;volatile
   447  000140                     
   448                           ; BSR set to: 15
   449                           ;./TX_WRITE.h: 25:    TXB0D3 = 0x04;
   450  000140  0E04               	movlw	4
   451  000142  6F49               	movwf	73,b	;volatile
   452  000144                     
   453                           ; BSR set to: 15
   454                           ;./TX_WRITE.h: 26:    TXB0D4 = 0x05;
   455  000144  0E05               	movlw	5
   456  000146  6F4A               	movwf	74,b	;volatile
   457  000148                     
   458                           ; BSR set to: 15
   459                           ;./TX_WRITE.h: 27:    TXB0D5 = 0x06;
   460  000148  0E06               	movlw	6
   461  00014A  6F4B               	movwf	75,b	;volatile
   462  00014C                     
   463                           ; BSR set to: 15
   464                           ;./TX_WRITE.h: 28:    TXB0D6 =0x07;
   465  00014C  0E07               	movlw	7
   466  00014E  6F4C               	movwf	76,b	;volatile
   467  000150                     
   468                           ; BSR set to: 15
   469                           ;./TX_WRITE.h: 29:    TXB0D7 = 0x08;
   470  000150  0E08               	movlw	8
   471  000152  6F4D               	movwf	77,b	;volatile
   472  000154                     
   473                           ; BSR set to: 15
   474                           ;./TX_WRITE.h: 31:    TXB0CON = 0x08;
   475  000154  0E08               	movlw	8
   476  000156  6F40               	movwf	64,b	;volatile
   477  000158                     
   478                           ; BSR set to: 15
   479  000158  0012               	return		;funcret
   480  00015A                     __end_of_tx_write:
   481                           	callstack 0
   482                           
   483 ;; *************** function _sys_init *****************
   484 ;; Defined at:
   485 ;;		line 11 in file "./sys_init.h"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		None
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text2
   514  000270                     __ptext2:
   515                           	callstack 0
   516  000270                     _sys_init:
   517                           	callstack 29
   518  000270                     
   519                           ;./sys_init.h: 13:     GIE=1;
   520  000270  8EF2               	bsf	4082,7,c	;volatile
   521                           
   522                           ;./sys_init.h: 14:     PEIE=1;
   523  000272  8CF2               	bsf	4082,6,c	;volatile
   524                           
   525                           ;./sys_init.h: 15:     RXB0IE=1;
   526  000274  80A3               	bsf	4003,0,c	;volatile
   527                           
   528                           ;./sys_init.h: 16:     RXB0IP=1;
   529  000276  80A5               	bsf	4005,0,c	;volatile
   530  000278  0012               	return		;funcret
   531  00027A                     __end_of_sys_init:
   532                           	callstack 0
   533                           
   534 ;; *************** function _rx_receive *****************
   535 ;; Defined at:
   536 ;;		line 15 in file "./RX_receive.h"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 2
   557 ;; This function calls:
   558 ;;		_set_mode
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text3
   565  0001AE                     __ptext3:
   566                           	callstack 0
   567  0001AE                     _rx_receive:
   568                           	callstack 28
   569  0001AE                     
   570                           ;./RX_receive.h: 18:     set_mode(3);
   571  0001AE  0E00               	movlw	0
   572  0001B0  6E1A               	movwf	(set_mode@X+1)^0,c
   573  0001B2  0E03               	movlw	3
   574  0001B4  6E19               	movwf	set_mode@X^0,c
   575  0001B6  ECAD  F000         	call	_set_mode	;wreg free
   576  0001BA                     
   577                           ;./RX_receive.h: 19:     DHR=RXB0SIDH;
   578  0001BA  CF61 F017          	movff	3937,_DHR	;volatile
   579  0001BE  6A18               	clrf	(_DHR+1)^0,c
   580  0001C0                     
   581                           ;./RX_receive.h: 20:     DLR=RXB0SIDL;
   582  0001C0  CF62 F015          	movff	3938,_DLR	;volatile
   583  0001C4  6A16               	clrf	(_DLR+1)^0,c
   584  0001C6                     
   585                           ;./RX_receive.h: 22:     DLCR=RXB0DLC;
   586  0001C6  CF65 F013          	movff	3941,_DLCR	;volatile
   587  0001CA  6A14               	clrf	(_DLCR+1)^0,c
   588  0001CC                     
   589                           ;./RX_receive.h: 23:     RX_data[0]=RXB0D0;
   590  0001CC  CF66 F001          	movff	3942,_RX_data	;volatile
   591  0001D0  6A02               	clrf	(_RX_data+1)^0,c
   592  0001D2                     
   593                           ;./RX_receive.h: 24:     RX_data[1]=RXB0D1;
   594  0001D2  CF67 F003          	movff	3943,_RX_data+2	;volatile
   595  0001D6  6A04               	clrf	(_RX_data+3)^0,c
   596  0001D8                     
   597                           ;./RX_receive.h: 25:     RX_data[2]=RXB0D2;
   598  0001D8  CF68 F005          	movff	3944,_RX_data+4	;volatile
   599  0001DC  6A06               	clrf	(_RX_data+5)^0,c
   600  0001DE                     
   601                           ;./RX_receive.h: 26:     RX_data[3]=RXB0D3;
   602  0001DE  CF69 F007          	movff	3945,_RX_data+6	;volatile
   603  0001E2  6A08               	clrf	(_RX_data+7)^0,c
   604  0001E4                     
   605                           ;./RX_receive.h: 27:     RX_data[4]=RXB0D4;
   606  0001E4  CF6A F009          	movff	3946,_RX_data+8	;volatile
   607  0001E8  6A0A               	clrf	(_RX_data+9)^0,c
   608  0001EA                     
   609                           ;./RX_receive.h: 28:     RX_data[5]=RXB0D5;
   610  0001EA  CF6B F00B          	movff	3947,_RX_data+10	;volatile
   611  0001EE  6A0C               	clrf	(_RX_data+11)^0,c
   612  0001F0                     
   613                           ;./RX_receive.h: 29:     RX_data[6]=RXB0D6;
   614  0001F0  CF6C F00D          	movff	3948,_RX_data+12	;volatile
   615  0001F4  6A0E               	clrf	(_RX_data+13)^0,c
   616  0001F6                     
   617                           ;./RX_receive.h: 30:     RX_data[7]=RXB0D7;
   618  0001F6  CF6D F00F          	movff	3949,_RX_data+14	;volatile
   619  0001FA  6A10               	clrf	(_RX_data+15)^0,c
   620  0001FC                     
   621                           ;./RX_receive.h: 31:     RXB0CONbits.RXB0FUL=0;
   622  0001FC  9E60               	bcf	96,7,c	;volatile
   623  0001FE  0012               	return		;funcret
   624  000200                     __end_of_rx_receive:
   625                           	callstack 0
   626                           
   627 ;; *************** function _mask_filter *****************
   628 ;; Defined at:
   629 ;;		line 11 in file "./mask_filter.h"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text4
   658  00025C                     __ptext4:
   659                           	callstack 0
   660  00025C                     _mask_filter:
   661                           	callstack 29
   662  00025C                     
   663                           ;./mask_filter.h: 13:     RXF0SIDH=0x00;
   664  00025C  0E00               	movlw	0
   665  00025E  010F               	movlb	15	; () banked
   666  000260  6F00               	movwf	0,b	;volatile
   667                           
   668                           ;./mask_filter.h: 14:     RXF0SIDL=0x00;
   669  000262  0E00               	movlw	0
   670  000264  6F01               	movwf	1,b	;volatile
   671                           
   672                           ;./mask_filter.h: 15:     RXM0SIDH=0x00;
   673  000266  0E00               	movlw	0
   674  000268  6F18               	movwf	24,b	;volatile
   675                           
   676                           ;./mask_filter.h: 16:     RXM0SIDL=0x00;
   677  00026A  0E00               	movlw	0
   678  00026C  6F19               	movwf	25,b	;volatile
   679  00026E                     
   680                           ; BSR set to: 15
   681  00026E  0012               	return		;funcret
   682  000270                     __end_of_mask_filter:
   683                           	callstack 0
   684                           
   685 ;; *************** function _can_init *****************
   686 ;; Defined at:
   687 ;;		line 11 in file "./can_init.h"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		None
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text5
   716  00027A                     __ptext5:
   717                           	callstack 0
   718  00027A                     _can_init:
   719                           	callstack 29
   720  00027A                     
   721                           ;./can_init.h: 13:     TRISBbits.RB2=0;
   722  00027A  9493               	bcf	147,2,c	;volatile
   723                           
   724                           ;./can_init.h: 14:     TRISBbits.RB3=1;
   725  00027C  8693               	bsf	147,3,c	;volatile
   726                           
   727                           ;./can_init.h: 15:     TRISBbits.RB7=0;
   728  00027E  9E93               	bcf	147,7,c	;volatile
   729                           
   730                           ;./can_init.h: 16:     TRISBbits.RB6=0;
   731  000280  9C93               	bcf	147,6,c	;volatile
   732  000282  0012               	return		;funcret
   733  000284                     __end_of_can_init:
   734                           	callstack 0
   735                           
   736 ;; *************** function _can_config_baud *****************
   737 ;; Defined at:
   738 ;;		line 11 in file "./can_config.h"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 2
   759 ;; This function calls:
   760 ;;		_set_mode
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text6
   767  000200                     __ptext6:
   768                           	callstack 0
   769  000200                     _can_config_baud:
   770                           	callstack 28
   771  000200                     
   772                           ;./can_config.h: 13:     set_mode(1);
   773  000200  0E00               	movlw	0
   774  000202  6E1A               	movwf	(set_mode@X+1)^0,c
   775  000204  0E01               	movlw	1
   776  000206  6E19               	movwf	set_mode@X^0,c
   777  000208  ECAD  F000         	call	_set_mode	;wreg free
   778  00020C                     
   779                           ;./can_config.h: 16:             BRGCON1 = 0xC1;
   780  00020C  0EC1               	movlw	193
   781  00020E  6E70               	movwf	112,c	;volatile
   782  000210                     
   783                           ;./can_config.h: 17:             BRGCON2 = 0xAE;
   784  000210  0EAE               	movlw	174
   785  000212  6E71               	movwf	113,c	;volatile
   786  000214                     
   787                           ;./can_config.h: 18:             BRGCON3 = 0x45;
   788  000214  0E45               	movlw	69
   789  000216  6E72               	movwf	114,c	;volatile
   790  000218                     
   791                           ;./can_config.h: 19:             set_mode(2);
   792  000218  0E00               	movlw	0
   793  00021A  6E1A               	movwf	(set_mode@X+1)^0,c
   794  00021C  0E02               	movlw	2
   795  00021E  6E19               	movwf	set_mode@X^0,c
   796  000220  ECAD  F000         	call	_set_mode	;wreg free
   797  000224  0012               	return		;funcret
   798  000226                     __end_of_can_config_baud:
   799                           	callstack 0
   800                           
   801 ;; *************** function _set_mode *****************
   802 ;; Defined at:
   803 ;;		line 11 in file "./set_mode.h"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  X               2    0[COMRAM] unsigned int 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_can_config_baud
   828 ;;		_tx_write
   829 ;;		_rx_receive
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text7
   834  00015A                     __ptext7:
   835                           	callstack 0
   836  00015A                     _set_mode:
   837                           	callstack 28
   838  00015A                     
   839                           ;./set_mode.h: 11: void set_mode(unsigned int X);./set_mode.h: 12: {;./set_mode.h: 13:  
      +                             if(X == 1)
   840  00015A  0419               	decf	set_mode@X^0,w,c
   841  00015C  101A               	iorwf	(set_mode@X+1)^0,w,c
   842  00015E  A4D8               	btfss	status,2,c
   843  000160  EFB4  F000         	goto	u91
   844  000164  EFB6  F000         	goto	u90
   845  000168                     u91:
   846  000168  EFBA  F000         	goto	l936
   847  00016C                     u90:
   848  00016C                     
   849                           ;./set_mode.h: 14:         CANCON = 0x80;
   850  00016C  0E80               	movlw	128
   851  00016E  6E6F               	movwf	111,c	;volatile
   852  000170  EFD6  F000         	goto	l103
   853  000174                     l936:
   854  000174  0E02               	movlw	2
   855  000176  1819               	xorwf	set_mode@X^0,w,c
   856  000178  101A               	iorwf	(set_mode@X+1)^0,w,c
   857  00017A  A4D8               	btfss	status,2,c
   858  00017C  EFC2  F000         	goto	u101
   859  000180  EFC4  F000         	goto	u100
   860  000184                     u101:
   861  000184  EFC8  F000         	goto	l940
   862  000188                     u100:
   863  000188                     
   864                           ;./set_mode.h: 16:         CANCON = 0x08;
   865  000188  0E08               	movlw	8
   866  00018A  6E6F               	movwf	111,c	;volatile
   867  00018C  EFD6  F000         	goto	l103
   868  000190                     l940:
   869  000190  0E03               	movlw	3
   870  000192  1819               	xorwf	set_mode@X^0,w,c
   871  000194  101A               	iorwf	(set_mode@X+1)^0,w,c
   872  000196  A4D8               	btfss	status,2,c
   873  000198  EFD0  F000         	goto	u111
   874  00019C  EFD2  F000         	goto	u110
   875  0001A0                     u111:
   876  0001A0  EFD6  F000         	goto	l100
   877  0001A4                     u110:
   878  0001A4                     
   879                           ;./set_mode.h: 18:         CANCON = 0x0E;
   880  0001A4  0E0E               	movlw	14
   881  0001A6  6E6F               	movwf	111,c	;volatile
   882  0001A8  EFD6  F000         	goto	l103
   883  0001AC                     l100:
   884  0001AC                     l103:
   885  0001AC  0012               	return		;funcret
   886  0001AE                     __end_of_set_mode:
   887                           	callstack 0
   888                           
   889 ;; *************** function _ISR1 *****************
   890 ;; Defined at:
   891 ;;		line 88 in file "mainappln.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		Interrupt level 2
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	intcode
   919  000008                     __pintcode:
   920                           	callstack 0
   921  000008                     _ISR1:
   922                           	callstack 28
   923                           
   924                           ;incstack = 0
   925  000008  8228               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   926  00000A  ED13  F001         	call	int_func,f	;refresh shadow registers
   927                           
   928                           	psect	intcode_body
   929  000226                     __pintcode_body:
   930                           	callstack 28
   931  000226                     int_func:
   932                           	callstack 28
   933  000226  0006               	pop		; remove dummy address from shadow register refresh
   934  000228                     
   935                           ;mainappln.c: 90:     PORTBbits.RB7=1;
   936  000228  8E81               	bsf	129,7,c	;volatile
   937                           
   938                           ;mainappln.c: 91:     if(RXB0IF == 1)
   939  00022A  A0A4               	btfss	4004,0,c	;volatile
   940  00022C  EF1A  F001         	goto	i2u5_41
   941  000230  EF1C  F001         	goto	i2u5_40
   942  000234                     i2u5_41:
   943  000234  EF21  F001         	goto	i2l131
   944  000238                     i2u5_40:
   945  000238                     
   946                           ;mainappln.c: 92:     {;mainappln.c: 94:         RXB0IF = 0;
   947  000238  90A4               	bcf	4004,0,c	;volatile
   948  00023A                     
   949                           ;mainappln.c: 95:         flag=1;
   950  00023A  0E00               	movlw	0
   951  00023C  6E12               	movwf	(_flag+1)^0,c
   952  00023E  0E01               	movlw	1
   953  000240  6E11               	movwf	_flag^0,c
   954  000242                     i2l131:
   955  000242  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   956  000244  0011               	retfie		f
   957  000246                     __end_of_ISR1:
   958                           	callstack 0
   959  0000                     
   960                           	psect	rparam
   961  0000                     
   962                           	psect	temp
   963  000028                     btemp:
   964                           	callstack 0
   965  000028                     	ds	1
   966  0000                     int$flags	set	btemp
   967  0000                     wtemp8	set	btemp+1
   968  0000                     ttemp5	set	btemp+1
   969  0000                     ttemp6	set	btemp+4
   970  0000                     ttemp7	set	btemp+8
   971                           
   972                           	psect	idloc
   973                           
   974                           ;Config register IDLOC0 @ 0x200000
   975                           ;	unspecified, using default values
   976  200000                     	org	2097152
   977  200000  FF                 	db	255
   978                           
   979                           ;Config register IDLOC1 @ 0x200001
   980                           ;	unspecified, using default values
   981  200001                     	org	2097153
   982  200001  FF                 	db	255
   983                           
   984                           ;Config register IDLOC2 @ 0x200002
   985                           ;	unspecified, using default values
   986  200002                     	org	2097154
   987  200002  FF                 	db	255
   988                           
   989                           ;Config register IDLOC3 @ 0x200003
   990                           ;	unspecified, using default values
   991  200003                     	org	2097155
   992  200003  FF                 	db	255
   993                           
   994                           ;Config register IDLOC4 @ 0x200004
   995                           ;	unspecified, using default values
   996  200004                     	org	2097156
   997  200004  FF                 	db	255
   998                           
   999                           ;Config register IDLOC5 @ 0x200005
  1000                           ;	unspecified, using default values
  1001  200005                     	org	2097157
  1002  200005  FF                 	db	255
  1003                           
  1004                           ;Config register IDLOC6 @ 0x200006
  1005                           ;	unspecified, using default values
  1006  200006                     	org	2097158
  1007  200006  FF                 	db	255
  1008                           
  1009                           ;Config register IDLOC7 @ 0x200007
  1010                           ;	unspecified, using default values
  1011  200007                     	org	2097159
  1012  200007  FF                 	db	255
  1013                           
  1014                           	psect	config
  1015                           
  1016                           ; Padding undefined space
  1017  300000                     	org	3145728
  1018  300000  FF                 	db	255
  1019                           
  1020                           ;Config register CONFIG1H @ 0x300001
  1021                           ;	Oscillator Selection bits
  1022                           ;	OSC = HS, HS oscillator
  1023                           ;	Fail-Safe Clock Monitor Enable bit
  1024                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1025                           ;	Internal/External Oscillator Switchover bit
  1026                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1027  300001                     	org	3145729
  1028  300001  02                 	db	2
  1029                           
  1030                           ;Config register CONFIG2L @ 0x300002
  1031                           ;	Power-up Timer Enable bit
  1032                           ;	PWRT = OFF, PWRT disabled
  1033                           ;	Brown-out Reset Enable bits
  1034                           ;	BOREN = BOHW, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1035                           ;	Brown-out Reset Voltage bits
  1036                           ;	BORV = 3, VBOR set to 2.1V
  1037  300002                     	org	3145730
  1038  300002  1F                 	db	31
  1039                           
  1040                           ;Config register CONFIG2H @ 0x300003
  1041                           ;	Watchdog Timer Enable bit
  1042                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1043                           ;	Watchdog Timer Postscale Select bits
  1044                           ;	WDTPS = 32768, 1:32768
  1045  300003                     	org	3145731
  1046  300003  1E                 	db	30
  1047                           
  1048                           ; Padding undefined space
  1049  300004                     	org	3145732
  1050  300004  FF                 	db	255
  1051                           
  1052                           ;Config register CONFIG3H @ 0x300005
  1053                           ;	PORTB A/D Enable bit
  1054                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1055                           ;	Low-Power Timer 1 Oscillator Enable bit
  1056                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1057                           ;	MCLR Pin Enable bit
  1058                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1059  300005                     	org	3145733
  1060  300005  00                 	db	0
  1061                           
  1062                           ;Config register CONFIG4L @ 0x300006
  1063                           ;	Stack Full/Underflow Reset Enable bit
  1064                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1065                           ;	Single-Supply ICSP Enable bit
  1066                           ;	LVP = OFF, Single-Supply ICSP disabled
  1067                           ;	Boot Block Size Select bits
  1068                           ;	BBSIZ = 1024, 1K words (2K bytes) Boot Block
  1069                           ;	Extended Instruction Set Enable bit
  1070                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1071                           ;	Background Debugger Enable bit
  1072                           ;	DEBUG = 0x1, unprogrammed default
  1073  300006                     	org	3145734
  1074  300006  80                 	db	128
  1075                           
  1076                           ; Padding undefined space
  1077  300007                     	org	3145735
  1078  300007  FF                 	db	255
  1079                           
  1080                           ;Config register CONFIG5L @ 0x300008
  1081                           ;	Code Protection bit
  1082                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1083                           ;	Code Protection bit
  1084                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1085                           ;	Code Protection bit
  1086                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1087  300008                     	org	3145736
  1088  300008  0F                 	db	15
  1089                           
  1090                           ;Config register CONFIG5H @ 0x300009
  1091                           ;	Boot Block Code Protection bit
  1092                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1093                           ;	Data EEPROM Code Protection bit
  1094                           ;	CPD = OFF, Data EEPROM not code-protected
  1095  300009                     	org	3145737
  1096  300009  C0                 	db	192
  1097                           
  1098                           ;Config register CONFIG6L @ 0x30000A
  1099                           ;	Write Protection bit
  1100                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1101                           ;	Write Protection bit
  1102                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1103                           ;	Write Protection bit
  1104                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1105  30000A                     	org	3145738
  1106  30000A  0F                 	db	15
  1107                           
  1108                           ;Config register CONFIG6H @ 0x30000B
  1109                           ;	Configuration Register Write Protection bit
  1110                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1111                           ;	Boot Block Write Protection bit
  1112                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1113                           ;	Data EEPROM Write Protection bit
  1114                           ;	WRTD = OFF, Data EEPROM not write-protected
  1115  30000B                     	org	3145739
  1116  30000B  E0                 	db	224
  1117                           
  1118                           ;Config register CONFIG7L @ 0x30000C
  1119                           ;	Table Read Protection bit
  1120                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1121                           ;	Table Read Protection bit
  1122                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1123                           ;	Table Read Protection bit
  1124                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1125  30000C                     	org	3145740
  1126  30000C  0F                 	db	15
  1127                           
  1128                           ;Config register CONFIG7H @ 0x30000D
  1129                           ;	Boot Block Table Read Protection bit
  1130                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1131  30000D                     	org	3145741
  1132  30000D  40                 	db	64
  1133                           tosu	equ	0xFFF
  1134                           tosh	equ	0xFFE
  1135                           tosl	equ	0xFFD
  1136                           stkptr	equ	0xFFC
  1137                           pclatu	equ	0xFFB
  1138                           pclath	equ	0xFFA
  1139                           pcl	equ	0xFF9
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           indf0	equ	0xFEF
  1147                           postinc0	equ	0xFEE
  1148                           postdec0	equ	0xFED
  1149                           preinc0	equ	0xFEC
  1150                           plusw0	equ	0xFEB
  1151                           fsr0h	equ	0xFEA
  1152                           fsr0l	equ	0xFE9
  1153                           wreg	equ	0xFE8
  1154                           indf1	equ	0xFE7
  1155                           postinc1	equ	0xFE6
  1156                           postdec1	equ	0xFE5
  1157                           preinc1	equ	0xFE4
  1158                           plusw1	equ	0xFE3
  1159                           fsr1h	equ	0xFE2
  1160                           fsr1l	equ	0xFE1
  1161                           bsr	equ	0xFE0
  1162                           indf2	equ	0xFDF
  1163                           postinc2	equ	0xFDE
  1164                           postdec2	equ	0xFDD
  1165                           preinc2	equ	0xFDC
  1166                           plusw2	equ	0xFDB
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_tx_write
    _tx_write->_set_mode
    _rx_receive->_set_mode
    _can_config_baud->_set_mode

Critical Paths under _ISR1 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR1 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR1 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR1 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR1 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR1 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR1 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1276
                                             10 COMRAM     5     5      0
                    _can_config_baud
                           _can_init
                        _mask_filter
                         _rx_receive
                           _sys_init
                           _tx_write
 ---------------------------------------------------------------------------------
 (1) _tx_write                                             8     6      2     536
                                              2 COMRAM     8     6      2
                           _set_mode
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx_receive                                           0     0      0     370
                           _set_mode
 ---------------------------------------------------------------------------------
 (1) _mask_filter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _can_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _can_config_baud                                      0     0      0     370
                           _set_mode
 ---------------------------------------------------------------------------------
 (2) _set_mode                                             2     0      2     370
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_config_baud
     _set_mode
   _can_init
   _mask_filter
   _rx_receive
     _set_mode
   _sys_init
   _tx_write
     _set_mode

 _ISR1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    200      0       0      42        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      27       1       41.5%
BITBIGSFRlhh        4C      0       0      32        0.0%
BITBIGSFRlllllh     26      0       0      40        0.0%
BITBIGSFRlllllh     16      0       0      41        0.0%
BITBIGSFRllllhh     12      0       0      38        0.0%
BITBIGSFRlllhh      11      0       0      34        0.0%
BITBIGSFRlllhl       E      0       0      35        0.0%
BITBIGSFRllh         E      0       0      33        0.0%
BITBIGSFRh           D      0       0      31        0.0%
BITBIGSFRllllhh      2      0       0      37        0.0%
BITBIGSFRllllhl      2      0       0      39        0.0%
BITBIGSFRllllhh      1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27       3        0.0%
DATA                 0      0      27       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 20 14:04:05 2022

                     l91 0278                       l94 0282                       u90 016C  
                     u91 0168                      l100 01AC                      l103 01AC  
                    l120 01FE                      l106 0224                      l123 026E  
                    l109 0158                      l138 00BC                      l900 025C  
                    l830 0270                      l832 027A                      l940 0190  
                    l932 015A                      l942 01A4                      l934 016C  
                    l950 0214                      l936 0174                      l952 0218  
                    l944 0200                      l960 0126                      l938 0188  
                    l946 020C                      l970 013C                      l962 012A  
                    l954 00DE                      l948 0210                      l980 0150  
                    l972 0140                      l964 012E                      l956 00EA  
                    l990 01C6                      l982 0154                      l974 0144  
                    l966 0134                      l958 0106                      l992 01CC  
                    l984 01AE                      l976 0148                      l968 0138  
                    l994 01D2                      l986 01BA                      l978 014C  
                    _DHR 0017                      _GIE 007F97                      l996 01D8  
                    l988 01C0                      l998 01DE                      _DLR 0015  
                    u100 0188                      u101 0184                      u110 01A4  
                    u111 01A0                      u130 005C                      u131 0058  
                    u125 00F4                      u150 00B4                      u151 00B0  
                    u145 0074                      u167 003C                      u177 00C8  
                    wreg 000FE8                     l1000 01E4                     l1002 01EA  
                   l1010 0012                     l1004 01F0                     l1020 0032  
                   l1012 0016                     l1006 01F6                     l1030 00B4  
                   l1022 004A                     l1014 001E                     l1008 01FC  
                   l1024 005C                     l1032 00BE                     l1016 0022  
                   l1026 0064                     l1018 0026                     l1028 0068  
                   _DLCR 0013                     _ISR1 0008                     _PEIE 007F96  
                   _flag 0011                     _main 0012                     btemp 0028  
                   start 000E             ___param_bank 000000             ?_mask_filter 0019  
                  ?_ISR1 0019                    ?_main 0019                    i2l131 0242  
                  i2l902 0228                    i2l904 0238                    i2l906 023A  
                  ttemp5 0029                    ttemp6 002C                    ttemp7 0030  
                  status 000FD8                    wtemp8 0029             __end_of_ISR1 0246  
        __initialization 0246             __end_of_main 00DE                   ??_ISR1 0019  
                 ??_main 0023            __activetblptr 000000                   _CANCON 000F6F  
                 _RXB0D0 000F66                   _RXB0D1 000F67                   _RXB0D2 000F68  
                 _RXB0D3 000F69                   _RXB0D4 000F6A                   _RXB0D5 000F6B  
                 _RXB0D6 000F6C                   _RXB0D7 000F6D                   _RXB0IE 007D18  
                 _RXB0IF 007D20                   _RXB0IP 007D28                   _TXB0D0 000F46  
                 _TXB0D1 000F47                   _TXB0D2 000F48                   _TXB0D3 000F49  
                 _TXB0D4 000F4A                   _TXB0D5 000F4B                   _TXB0D6 000F4C  
                 _TXB0D7 000F4D                   i2u5_40 0238         __end_of_can_init 0284  
                 i2u5_41 0234                   clear_0 024C                   isa$std 000001  
       __end_of_set_mode 01AE         __end_of_tx_write 015A         __end_of_sys_init 027A  
             __accesstop 0060  __end_of__initialization 0252            ___rparam_used 000001  
         __pcstackCOMRAM 0019        ??_can_config_baud 001B                  _BRGCON1 000F70  
                _BRGCON2 000F71                  _BRGCON3 000F72                ?_can_init 0019  
                _RXB0DLC 000F65                  _TXB0DLC 000F45                  _TXB0CON 000F40  
                _RX_data 0001                  __Hparam 0000                  __Lparam 0000  
              ?_set_mode 0019                  __pcinit 0246                  __ramtop 0D00  
              ?_tx_write 001B                  __ptext0 0012                  __ptext1 00DE  
                __ptext2 0270                  __ptext3 01AE                  __ptext4 025C  
                __ptext5 027A                  __ptext6 0200                  __ptext7 015A  
              ?_sys_init 0019               ??_can_init 0019           __pintcode_body 0226  
   end_of_initialization 0252                  int_func 0226               ??_set_mode 001B  
                postinc0 000FEE               ??_tx_write 001D                _PORTBbits 000F81  
             ??_sys_init 0019                _TRISBbits 000F93                _TRISCbits 000F94  
             _rx_receive 01AE      start_initialization 0246          _can_config_baud 0200  
          ??_mask_filter 0019              __pbssCOMRAM 0001              ?_rx_receive 0019  
              __pintcode 0008      __end_of_mask_filter 0270  __end_of_can_config_baud 0226  
               _RXB0SIDH 000F61                 _RXB0SIDL 000F62                 _RXF0SIDH 000F00  
               _RXF0SIDL 000F01                 _TXB0SIDH 000F41                 _TXB0SIDL 000F42  
               _RXM0SIDH 000F18                 _RXM0SIDL 000F19                 __Hrparam 0000  
               __Lrparam 0000              _mask_filter 025C                 _can_init 027A  
       ?_can_config_baud 0019                set_mode@X 0019               tx_write@DH 0021  
             tx_write@DL 001F               tx_write@ID 001B                 _set_mode 015A  
               isa$xinst 000000                 int$flags 0028                 _tx_write 00DE  
               _sys_init 0270              _RXB0CONbits 000F60             ??_rx_receive 001B  
               intlevel2 0000       __end_of_rx_receive 0200  
